[{"/Users/jai/Documents/rev/gtfol-workshop/app/layout.tsx":"1","/Users/jai/Documents/rev/gtfol-workshop/app/page.tsx":"2","/Users/jai/Documents/rev/gtfol-workshop/app/dashboard/page.tsx":"3"},{"size":451,"mtime":1697296847112,"results":"4","hashOfConfig":"5"},{"size":4533,"mtime":1697295841213,"results":"6","hashOfConfig":"5"},{"size":105,"mtime":1697295946246,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"95m3of",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jai/Documents/rev/gtfol-workshop/app/layout.tsx",[],[],"/Users/jai/Documents/rev/gtfol-workshop/app/page.tsx",["18","19","20"],[],"'use client';\n\nimport Image from 'next/image'\nimport Head from 'next/head'\nimport { useRef, useState } from 'react';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCof0GJ_P0ntqdM0tJoSj4TSHoAYdcLzJg\",\n  authDomain: \"gtfol-workshop.firebaseapp.com\",\n  projectId: \"gtfol-workshop\",\n  storageBucket: \"gtfol-workshop.appspot.com\",\n  messagingSenderId: \"147805482218\",\n  appId: \"1:147805482218:web:5ea6e343014dd596263b93\",\n  measurementId: \"G-R1TY074LY9\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default function Home() {\n\n  const [email, setEmail] = useState(\"\");\n\n  // const [status, setStatus] = useState<ResponseStatus>(ResponseStatus.Waiting);\n  const [loading, setLoading] = useState(false);\n\n  const emailInputRef = useRef<HTMLInputElement>(null);\n\n  const signup = async (e: any) => {\n    e.preventDefault()\n    addEmail(email)\n  }\n\n  const addEmail = async (email: string) => {\n    console.log(\"user entered email: \", email)\n  };\n\n\n  return (\n    <div className=\"h-full min-h-screen lg:h-screen w-full flex flex-col bg-white\">\n      <Head>\n        <title> ENTER YOUR APP NAME </title>\n        <meta name=\"description\" content={`A social productivity tool designed to help you find your flow.`} />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div id=\"nav\" className=\"flex flex-row justify-between w-full py-8 px-12\">\n      </div>\n\n      <div id=\"main\" className=\"flex flex-col md:flex-row justify-center items-center w-full h-full gap-12 mx-auto mx-8 sm:px-8\">\n        <div id=\"hero\" className='flex flex-col gap-y-5 sm:min-w-[24rem] px-6 sm:px-0'>\n          <img className=\"h-24 w-24 sm:h-32 sm:w-32\" alt=\"logo\" src=\"/logo.png\" />\n          <h1 className='text-6xl sm:text-7xl font-bold text-[#001122]'> ENTER YOUR APP NAME </h1>\n          <h2 className='text-[#999999] text-xl font-medium'> ENTER APP DESCRIPTION </h2>\n          <div className=\"flex flex-row gap-x-3\">\n            <div>\n              <input ref={emailInputRef}\n                name=\"email_address\"\n                onChange={(e) => {\n                  // validateEmail(e.target.value)\n                  setEmail(e.target.value)\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    signup(e);\n                  }\n                }}\n                type=\"email\"\n                value={email}\n                required={true}\n                autoComplete='off'\n                aria-label=\"Email address\"\n                className={\n                  `appearance-none shadow rounded-xl ring-1 ring-silver leading-5 border border-transparent px-6 py-3 placeholder:text-black placeholder:text-opacity-25 block max-w-[360px] w-full text-[#222222] focus:outline-none focus:ring-2 bg-[#f2f2f2],\n                    'focus:ring-red-500',\n                    'focus:ring-electric-blue`\n                }\n                placeholder=\"name@email.com\"\n              />\n\n\n            </div>\n            <button onClick={(e) => signup(e)} className=\"px-5 py-3 border-none rounded-xl text-lg font-medium w-2/5 bg-blue hover:bg-electric-blue-accent text-white\">\n              Submit\n            </button>\n          </div>\n        </div>\n        <div id=\"demo\" className=\"w-full sm:w-[40rem] h-auto aspect-auto\">\n          <img\n            src=\"logo.png\" onContextMenu={() => false}\n            className=\"object-cover w-96 h-96 sm:shadow-2xl sm:rounded-lg bg-black\"\n          />\n        </div>\n      </div>\n      <div id=\"footer\" className=\"flex flex-row justify-between w-full py-8 px-12 flex-grow items-end\">\n        <p className=\"text-metallic-gray font-medium\">Â© 2023 <a href=\"https://rev.school\" target='_blank' referrerPolicy='no-referrer' className=\"hover:underline\">rev</a></p>\n        <div className=\"flex flex-row gap-x-4\">\n          <a target='_blank' referrerPolicy='no-referrer' href=\"https://twitter.com/rev_neu\" className=\"text-metallic-gray font-medium hover:underline\">Twitter</a>\n          <a target='_blank' referrerPolicy='no-referrer' href=\"https://github.com/teamrevspace/flowwork\" className=\"text-metallic-gray font-medium hover:underline\">Github</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/jai/Documents/rev/gtfol-workshop/app/dashboard/page.tsx",[],[],{"ruleId":"21","severity":1,"message":"22","line":59,"column":11,"nodeType":"23","endLine":59,"endColumn":83},{"ruleId":"21","severity":1,"message":"22","line":96,"column":11,"nodeType":"23","endLine":99,"endColumn":13},{"ruleId":"24","severity":1,"message":"25","line":96,"column":11,"nodeType":"23","endLine":99,"endColumn":13},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]